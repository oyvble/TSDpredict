% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/posteriorTime_NaiveMLE.R
\name{posteriorTime_NaiveMLE}
\alias{posteriorTime_NaiveMLE}
\title{posteriorTime_FullBayesian}
\usage{
posteriorTime_NaiveMLE(
  New_Y,
  Data_Y,
  Data_time,
  maxTime = 12,
  delta = 0.01,
  priorTime = NULL
)
}
\arguments{
\item{New_Y}{The observed response for new individuals (nsamples x nsites) matrix (also possible with vector)}

\item{Data_Y}{This is observed multi-responses (nsamples x nsites)}

\item{Data_time}{This is observed times (nsamples vector)}

\item{maxTime}{maximum of time (upper limit)}

\item{delta}{Grid size for the time variable}

\item{priorTime}{A prior distribution for the time variable (NULL means uniform distribution)}
}
\value{
ret list with posterior distribution for each new individuals (separate list for univariate prediction and all combined)
}
\description{
Calculating the posterior distribution of time for new individuals
}
\details{
This function provides posterior distribution of time, based on a multivariate model (Naive MLE approach), where time as a continuous exploratory variable from zero to maxTime

Prediction: Applying Bayes Theorem: p(time|Y) = konstant x p(Y|time) x p(time)
We assume an uniform prior for p(log(time))=unif, gives p(time)=1/t

 Model:
 p(Y|time,theta)=MVN(b0 + b1*time, SIGMA), SIGMA= COVARIANCE MATRIX
 where theta is estimated using maximum likelihood estimation (MLE), provided as theta_hat

 Predictor p(Ynew|time)=p(Ynew|time,theta=theta_hat)
}
\examples{
\dontrun{ 
ntrain = 100
ntest = 100
dat = genData(ntrain+ ntest,seed=1)
Data_Y = dat$Data_Y[1:ntrain,]
Data_time = dat$Data_time[1:ntrain]
New_Y = dat$Data_Y[-(1:ntrain),]
New_time = dat$Data_time[-(1:ntrain)]
predObj = posteriorTime_NaiveMLE(New_Y, Data_Y, Data_time)
}
}
\author{
Oyvind Bleka
}
